<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.myproject</groupId>
	<artifactId>arquillian</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<out.dir>${env.OUT_DIR}</out.dir>
	</properties>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<!-- which prevents a container from cleaning up after an Arquillian test 
				run; see ARQ-282. This could mean that a managed container used in your test 
				run will not be shutdown unless you use Surefire 2.9 or higher. -->
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.9</version>
			</plugin>

			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.1.1</version>
				<extensions>false</extensions>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
					<webappDirectory>${out.dir}\arquillian.war</webappDirectory>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<!-- element to import the BOM, or version matrix, for Arquillian’s transitive 
		dependencies. -->
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.jboss.arquillian</groupId>
				<artifactId>arquillian-bom</artifactId>
				<version>1.1.15.Final</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>

		<!-- We’re going to be writing Java EE 6 components. Therefore, we need 
			to add the Java EE 6 API to the classpath so we can compile these components. -->
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-web-api</artifactId>
			<version>6.0</version>
			<scope>provided</scope>
		</dependency>

		<!-- JUnit for using Arquillian. The first thing that is necessary to include 
			in order to run an Arquillian test is the JUnit dependency that is required 
			to run our unit tests: -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>

		<!-- element to add the Arquillian JUnit integration. if you want to test 
			enterprise features such as EJB and the Java Transaction API (JTA), you need 
			to include the org.jboss.arquillian.junit dependency as well: -->
		<dependency>
			<groupId>org.jboss.arquillian.junit</groupId>
			<artifactId>arquillian-junit-container</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- since our Arquillian test uses a protocol to communicate with the 
			server application, we will need to add the org.jboss.arquillian.protocol 
			dependency (named so as it's compatible with Servlet 2.5/3.0 specifications): -->
		<dependency>
			<groupId>org.jboss.arquillian.protocol</groupId>
			<artifactId>arquillian-protocol-servlet</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- An Arquillian container adapter (DeployableContainer implementation) 
			that can connect to and run tests on a JBoss AS 7.1 or JBoss EAP 6.0 instance 
			running locally or on a separate machine (effectively a different JVM). This 
			container adapter has no lifecycle support, so it can not start and stop 
			the server. It relies on a server that is already running. -->
		<dependency>
			<groupId>org.jboss.as</groupId>
			<artifactId>jboss-as-arquillian-container-remote</artifactId>
			<version>7.1.1.Final</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

</project>